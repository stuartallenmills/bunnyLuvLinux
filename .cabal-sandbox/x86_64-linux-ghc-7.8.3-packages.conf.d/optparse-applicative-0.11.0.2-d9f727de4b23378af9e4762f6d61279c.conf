name: optparse-applicative
version: 0.11.0.2
id: optparse-applicative-0.11.0.2-d9f727de4b23378af9e4762f6d61279c
license: BSD3
copyright: (c) 2012-2014 Paolo Capriotti <paolo@capriotti.io>
maintainer: paolo@capriotti.io
stability:
homepage: https://github.com/pcapriotti/optparse-applicative
package-url:
synopsis: Utilities and combinators for parsing command line options
description: Here is a simple example of an applicative option parser:
             .
             @
             data Sample = Sample
             &#x20; &#x7b; hello :: String
             &#x20; , quiet :: Bool &#x7d;
             .
             sample :: Parser Sample
             sample = Sample
             &#x20; \<$\> strOption
             &#x20;     ( long \"hello\"
             &#x20;    \<\> metavar \"TARGET\"
             &#x20;    \<\> help \"Target for the greeting\" )
             &#x20; \<*\> switch
             &#x20;     ( long \"quiet\"
             &#x20;    \<\> help \"Whether to be quiet\" )
             @
             .
             The parser is built using applicative style starting from a set of basic
             combinators. In this example, @hello@ is defined as an 'option' with a
             @String@ argument, while @quiet@ is a boolean 'flag' (called 'switch').
             .
             A parser can be used like this:
             .
             @
             greet :: Sample -> IO ()
             greet (Sample h False) = putStrLn $ \"Hello, \" ++ h
             greet _ = return ()
             .
             main :: IO ()
             main = execParser opts \>\>= greet
             &#x20; where
             &#x20;   opts = info (helper \<*\> sample)
             &#x20;     ( fullDesc
             &#x20;    \<\> progDesc \"Print a greeting for TARGET\"
             &#x20;    \<\> header \"hello - a test for optparse-applicative\" )
             @
             .
             The @greet@ function is the entry point of the program, while @opts@ is a
             complete description of the program, used when generating a help text. The
             'helper' combinator takes any parser, and adds a @help@ option to it (which
             always fails).
             .
             The @hello@ option in this example is mandatory (since it doesn't have a
             default value), so running the program without any argument will display a
             help text:
             .
             >hello - a test for optparse-applicative
             >
             >Usage: hello --hello TARGET [--quiet]
             >  Print a greeting for TARGET
             >
             >Available options:
             >  -h,--help                Show this help text
             >  --hello TARGET           Target for the greeting
             >  --quiet                  Whether to be quiet
             .
             containing a short usage summary, and a detailed list of options with
             descriptions.
category: System
author: Paolo Capriotti
exposed: True
exposed-modules: Options.Applicative Options.Applicative.Arrows
                 Options.Applicative.BashCompletion Options.Applicative.Builder
                 Options.Applicative.Builder.Completer
                 Options.Applicative.Builder.Internal Options.Applicative.Common
                 Options.Applicative.Extra Options.Applicative.Help
                 Options.Applicative.Help.Pretty Options.Applicative.Help.Chunk
                 Options.Applicative.Help.Core Options.Applicative.Help.Types
                 Options.Applicative.Types Options.Applicative.Internal
hidden-modules:
trusted: False
import-dirs: /home/smills/share/Hask/bunnyluv/.cabal-sandbox/lib/x86_64-linux-ghc-7.8.3/optparse-applicative-0.11.0.2
library-dirs: /home/smills/share/Hask/bunnyluv/.cabal-sandbox/lib/x86_64-linux-ghc-7.8.3/optparse-applicative-0.11.0.2
hs-libraries: HSoptparse-applicative-0.11.0.2
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: ansi-wl-pprint-0.6.7.2-32a1a9583c2cb8c401c261843a4c0bbc
         base-4.7.0.1-1a55ebc8256b39ccbff004d48b3eb834
         process-1.2.0.0-0b4acf6b306971cf83414bb065a5734c
         transformers-0.3.0.0-16a97696ae672940f1523b262e566ba5
         transformers-compat-0.4.0.4-f031b5d5b19ed0e63591a1a365059af3
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/smills/share/Hask/bunnyluv/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.8.3/optparse-applicative-0.11.0.2/html/optparse-applicative.haddock
haddock-html: /home/smills/share/Hask/bunnyluv/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.8.3/optparse-applicative-0.11.0.2/html
